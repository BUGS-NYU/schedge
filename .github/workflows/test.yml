name: Test Java Code

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.1-alpine

        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        # Maps tcp port 5432 on service container to the host
        ports:
          - 5432:5432

    # container: ubuntu:22.04
    env:
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      JDBC_URL: jdbc:postgresql://localhost:5432/postgres

    steps:
    - name: Checkout Project
      uses: actions/checkout@v3
      with:
        lfs: true

    - name: Set up Node + Yarn
      uses: actions/setup-node@v3
      with:
        cache: 'yarn'

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Build JAR file
      run: |
        yarn gradle jar

    # Command lifted from `src/build/docker/entrypoint.sh`
    - name: Scrape terms
      run: >
        java -Xmx1G -Djdk.httpclient.allowRestrictedHeaders=host,connection
        -jar .build/libs/schedge.jar
        db populate --v2 ja2021

    - name: Test Code
      run: yarn test
