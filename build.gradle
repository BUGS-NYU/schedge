plugins {
    id "java"
    id "application"
    id "org.flywaydb.flyway" version "6.2.4"
}

mainClassName = 'Main'

def getenv = { env_val, default_val ->
  ext.val = System.getenv(env_val)
  if (ext.val == null) {
    return default_val
  } else return ext.val
}

flyway {
  driver = 'org.postgresql.Driver'
  url = getenv("JDBC_URL", "jdbc:postgresql://localhost:5432/schedge")
  user = getenv("DB_USERNAME", "schedge")
  password = getenv("DB_PASSWORD", "docker")
  locations = ['filesystem:src/main/migrations']
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation(
            "org.slf4j:slf4j-api:1.7.25", // Logging
            "org.slf4j:slf4j-simple:1.7.30", // Logging

            "org.postgresql:postgresql:42.2.12", // Database driver
            "com.zaxxer:HikariCP:3.4.1", // Database connection pool

            "org.jsoup:jsoup:1.12.1", // HTML Parsing

            "me.tongfei:progressbar:0.8.1", // Progress bar

            "org.asynchttpclient:async-http-client-bom:2.10.5",
            "org.asynchttpclient:async-http-client:2.10.5", // Async Http Client

            "info.picocli:picocli:4.1.4", // Command line args
            "com.fasterxml.jackson.core:jackson-annotations:2.4.1", // JSON

            "io.javalin:javalin:3.5.0", // Web server framework
            "io.swagger.core.v3:swagger-core:2.0.9", // Web server docs framework
            "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1", // JSON
    )
}

// The build directory should not begin with the same name as the script
allprojects {
    buildDir = ".build"
}

jar {
  manifest { attributes ('Main-Class': 'Main') }

  from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
