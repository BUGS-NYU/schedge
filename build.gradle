plugins {
  id "java"
  id "application"
  id 'com.avast.gradle.docker-compose' version '0.15.0'
}

mainClassName = 'Main'
sourceCompatibility = '11'
targetCompatibility = '11'

// def getenv = { String env_val, default_val ->
//   ext.val = System.getenv(env_val)
//   if (ext.val == null) {
//   return default_val
//   } else return ext.val
// }

tasks.named('wrapper') {
  jarFile = "${project.projectDir}/src/build/gradle/gradle-wrapper.jar"
}


tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked"
}

repositories {
  mavenCentral()
}

dependencies {
  annotationProcessor(
    "io.javalin.community.openapi:openapi-annotation-processor:5.1.0"
  )

  implementation(
    // Logging
    "org.slf4j:slf4j-api:2.0.3",
    "org.slf4j:slf4j-simple:2.0.3",

    // Database driver and connection pool
    "org.postgresql:postgresql:42.2.12",
    "com.zaxxer:HikariCP:3.4.1",

    // HTML Parsing
    "org.jsoup:jsoup:1.15.3",

    // Command line arg parsing and progress bar
    "info.picocli:picocli:4.1.4",
    "me.tongfei:progressbar:0.8.1",

    // JSON
    "com.fasterxml.jackson.core:jackson-annotations:2.7.4",

    // Web server framework and documentation
    "io.javalin:javalin:5.1.1",
    // for /openapi route with JSON scheme
    "io.javalin.community.openapi:javalin-openapi-plugin:5.1.0",
  )
}

// The build directory should not begin with the same name as the script
allprojects {
  buildDir = ".build"
}

// @TODO use application plugin to make a distribution instead of using
// a fat jar. Fat jars take an annoying amount of time to compile, wheras
// the distribution plugin likely won't, because it has less work to do.
//                   - Albert Liu, Jan 31, 2022 Mon 01:34 EST
jar {
  manifest { attributes ('Main-Class': 'Main') }
  duplicatesStrategy = "include"

  dependsOn configurations.runtimeClasspath

  from('src/main') {
    include 'migrations/*.sql'
  }

  from {
    configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
  }
}

composeBuild.dependsOn build
composeUp.dependsOn composeBuild

dockerCompose {
  buildBeforeUp = false
  projectName = 'schedge'
}
