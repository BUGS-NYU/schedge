{
  "openapi": "3.0.1",
  "info": {
    "title": "Schedge",
    "description": "Schedge is an API to NYU's course catalog. Please note that <b>this API is currently under active development and is subject to change</b>.<br/> <br/> If you'd like to contribute, <a href=\"https://github.com/BUGS-NYU/schedge\">check out the repository</a>.",
    "version": "1.0"
  },
  "paths": {
    "/subjects": {
      "get": {
        "summary": "Subjects Endpoint",
        "description": "This endpoint returns an object whose keys are schools, and whose values are objects with subject codes as keys and subject names as values.",
        "operationId": "getSubjects",
        "responses": {
          "200": {
            "description": "Default response"
          }
        }
      }
    },
    "/schools": {
      "get": {
        "summary": "Schools Endpoint",
        "description": "This endpoint returns an object where keys are school codes, and values are their full names.",
        "operationId": "getSchools",
        "responses": {
          "200": {
            "description": "Default response"
          }
        }
      }
    },
    "/{year}/{semester}/{school}/{subject}": {
      "get": {
        "summary": "Courses Endpoint",
        "description": "This endpoint returns a list of courses for a specific year, semester, school, and subject.",
        "operationId": "getWithYearWithSemesterWithSchoolWithSubject",
        "parameters": [{
          "name": "year",
          "in": "path",
          "description": "Must be a valid year.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "semester",
          "in": "path",
          "description": "Must be a valid semester code.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["su", "sp", "fa", "ja"]
          }
        }, {
          "name": "school",
          "in": "path",
          "description": "Must be a valid school code. Take a look at the docs for the schools endpoint for more information.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "subject",
          "in": "path",
          "description": "Must be a valid subject code. Take a look at the docs for the subjects endpoint for more information.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "400": {
            "description": "One of the values in the path parameter was not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{year}/{semester}/generateSchedule": {
      "get": {
        "summary": "Schedule Checking Endpoint",
        "description": "This endpoint returns either an ordered schedule, or a pair 'conflictA' and 'conflictB'. You can use the 'valid' field to check whether the schedule is valid.",
        "operationId": "getWithYearWithSemesterGenerateschedule",
        "parameters": [{
          "name": "year",
          "in": "path",
          "description": "Must be a valid year.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "semester",
          "in": "path",
          "description": "Must be a valid semester code.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["su", "sp", "fa", "ja"]
          }
        }, {
          "name": "registrationNumbers",
          "in": "query",
          "description": "CSV of registration numbers",
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "400": {
            "description": "One of the values in the path parameter was not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          }
        }
      }
    },
    "/{year}/{semester}/search": {
      "get": {
        "summary": "Search Endpoint",
        "description": "This endpoint returns a list of courses for a year and semester, given search terms.",
        "operationId": "getWithYearWithSemesterSearch",
        "parameters": [{
          "name": "year",
          "in": "path",
          "description": "Must be a valid year.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "semester",
          "in": "path",
          "description": "Must be a valid semester code.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["su", "sp", "fa", "ja"]
          }
        }, {
          "name": "full",
          "in": "query",
          "description": "if present and equal to 'true', then you'll get full output",
          "schema": {
            "type": "boolean"
          }
        }, {
          "name": "query",
          "in": "query",
          "description": "A query string to pass to the search engine.",
          "schema": {
            "type": "string"
          }
        }, {
          "name": "limit",
          "in": "query",
          "description": "The maximum number of top-level sections to return. Capped at 50.",
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "school",
          "in": "query",
          "description": "The school to search within.",
          "schema": {
            "type": "string"
          }
        }, {
          "name": "subject",
          "in": "query",
          "description": "The subject to search within. Can work cross school.",
          "schema": {
            "type": "string"
          }
        }, {
          "name": "titleWeight",
          "in": "query",
          "description": "The weight given to course titles in search. Default is 2.",
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "descriptionWeight",
          "in": "query",
          "description": "The weight given to course descriptions in search. Default is 1.",
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "notesWeight",
          "in": "query",
          "description": "The weight given to course notes in search. Default is 0.",
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "prereqsWeight",
          "in": "query",
          "description": "The weight given to course prerequisites in search. Default is 0.",
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }],
        "responses": {
          "400": {
            "description": "One of the values in the path parameter was not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{year}/{semester}/notOnline": {
      "get": {
        "summary": "Non-Online Endpoint",
        "description": "This endpoint returns a list of courses for a specific year, semester that aren't online.",
        "operationId": "getWithYearWithSemesterNotonline",
        "parameters": [{
          "name": "year",
          "in": "path",
          "description": "Must be a valid year.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "semester",
          "in": "path",
          "description": "Must be a valid semester code.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["su", "sp", "fa", "ja"]
          }
        }, {
          "name": "query",
          "in": "query",
          "description": "query string for text search, optional",
          "schema": {
            "type": "string"
          }
        }, {
          "name": "full",
          "in": "query",
          "description": "if present and equal to 'true', then you'll get full output",
          "schema": {
            "type": "boolean"
          }
        }],
        "responses": {
          "400": {
            "description": "One of the values in the path parameter was not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{year}/{semester}/{registrationNumber}": {
      "get": {
        "summary": "Section Endpoint",
        "description": "This endpoint returns a section for a specific year, semester, and registration number.",
        "operationId": "getWithYearWithSemesterWithRegistrationnumber",
        "parameters": [{
          "name": "year",
          "in": "path",
          "description": "Must be a valid year.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "semester",
          "in": "path",
          "description": "Must be a valid semester code.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["su", "sp", "fa", "ja"]
          }
        }, {
          "name": "registrationNumber",
          "in": "path",
          "description": "Must be a valid registrationNumber.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }],
        "responses": {
          "400": {
            "description": "One of the values in the path parameter was not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Course": {
        "required": ["deptCourseId", "name", "sections", "subjectCode"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "deptCourseId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "subjectCode": {
            "$ref": "#/components/schemas/SubjectCode"
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          }
        }
      },
      "Meeting": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string"
          },
          "minutesDuration": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "Section": {
        "type": "object",
        "properties": {
          "registrationNumber": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "instructors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": ["LEC", "RCT", "LAB", "SEM", "PCT", "INT", "RSC", "FLD", "SIM", "LLB", "DLX", "CLI", "STU", "STI", "STG", "CLQ", "WKS", "IND", "PRO", "GUI", "NCR", "PRP", "MAM", "DLG", "NCH", "EQV"]
          },
          "status": {
            "type": "string",
            "enum": ["Open", "Closed", "WaitList", "Cancelled"]
          },
          "meetings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Meeting"
            }
          },
          "recitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "waitlistTotal": {
            "type": "integer",
            "format": "int32"
          },
          "instructionMode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "campus": {
            "type": "string"
          },
          "minUnits": {
            "type": "number",
            "format": "double"
          },
          "maxUnits": {
            "type": "number",
            "format": "double"
          },
          "grading": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "prerequisites": {
            "type": "string"
          }
        }
      },
      "SubjectCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "school": {
            "type": "string"
          }
        }
      },
      "AugmentedMeeting": {
        "type": "object",
        "properties": {
          "sectionName": {
            "type": "string"
          },
          "subject": {
            "$ref": "#/components/schemas/SubjectCode"
          },
          "deptCourseId": {
            "type": "string"
          },
          "sectionCode": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "integer",
            "format": "int32"
          },
          "sectionType": {
            "type": "string",
            "enum": ["LEC", "RCT", "LAB", "SEM", "PCT", "INT", "RSC", "FLD", "SIM", "LLB", "DLX", "CLI", "STU", "STI", "STG", "CLQ", "WKS", "IND", "PRO", "GUI", "NCR", "PRP", "MAM", "DLG", "NCH", "EQV"]
          },
          "sectionStatus": {
            "type": "string",
            "enum": ["Open", "Closed", "WaitList", "Cancelled"]
          },
          "instructionMode": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "beginDate": {
            "type": "string"
          },
          "minutesDuration": {
            "type": "integer",
            "format": "int32"
          },
          "endDate": {
            "type": "string"
          },
          "minutesInDay": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "mo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AugmentedMeeting"
            }
          },
          "tu": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AugmentedMeeting"
            }
          },
          "we": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AugmentedMeeting"
            }
          },
          "th": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AugmentedMeeting"
            }
          },
          "fr": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AugmentedMeeting"
            }
          },
          "sa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AugmentedMeeting"
            }
          },
          "su": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AugmentedMeeting"
            }
          },
          "conflictA": {
            "$ref": "#/components/schemas/AugmentedMeeting"
          },
          "conflictB": {
            "$ref": "#/components/schemas/AugmentedMeeting"
          }
        }
      }
    }
  }
}